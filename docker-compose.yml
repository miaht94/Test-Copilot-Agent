services:
  # Postgres - Source Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: sourcedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - data-pipeline
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Minio - S3A Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - data-pipeline
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Create Minio buckets
  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/warehouse;
      /usr/bin/mc policy set public myminio/warehouse;
      exit 0;
      "
    networks:
      - data-pipeline

  # Hive Metastore Database
  hive-metastore-db:
    image: postgres:15
    container_name: hive-metastore-db
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    ports:
      - "5433:5432"
    volumes:
      - hive_metastore_data:/var/lib/postgresql/data
    networks:
      - data-pipeline
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Hive Metastore
  hive-metastore:
    image: apache/hive:3.1.3
    container_name: hive-metastore
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: "-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
                     -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://hive-metastore-db:5432/metastore
                     -Djavax.jdo.option.ConnectionUserName=hive
                     -Djavax.jdo.option.ConnectionPassword=hive"
    ports:
      - "9083:9083"
    depends_on:
      hive-metastore-db:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    volumes:
      - ./hive-config:/opt/hive/conf
    networks:
      - data-pipeline
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9083"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Trino Coordinator
  trino:
    image: trinodb/trino:435
    container_name: trino
    ports:
      - "8080:8080"
    volumes:
      - ./trino-config:/etc/trino
    depends_on:
      postgres:
        condition: service_healthy
      hive-metastore:
        condition: service_healthy
    networks:
      - data-pipeline
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 10s
      timeout: 5s
      retries: 10

  # DBT Service
  dbt:
    build: ./dbt
    container_name: dbt
    volumes:
      - ./dbt:/usr/app
      - ./dbt/profiles.yml:/root/.dbt/profiles.yml
    working_dir: /usr/app
    depends_on:
      trino:
        condition: service_healthy
    networks:
      - data-pipeline
    command: tail -f /dev/null  # Keep container running

volumes:
  postgres_data:
  minio_data:
  hive_metastore_data:

networks:
  data-pipeline:
    driver: bridge